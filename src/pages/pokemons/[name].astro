---
import type { GetStaticPaths } from "astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";

import MainLayout from "@layouts/MainLayout.astro";
import PokemonCard from "@components/pokemon/PokemonCard.astro";
import Title from "@shared/Title.astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async () => {
  const res = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151')
  const {results} = await res.json() as PokemonListResponse

  return results.map(({name, url}) => ({
      params:{name: name}, 
      props: {name: name, url:url}
    })
  )
}) satisfies GetStaticPaths;


const { name } = Astro.params
const { url } = Astro.props

const id = url.split("/").at(-2)
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/{id}.ogg`
const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`
---

<MainLayout 
  title={`Pokemon - ${id} ${name}`} 
  description={`Information about ${name}`} 
  image={imageUrl} 
>
  <section class='mt-10 mx-10 flex flex-col justify-center items-center'>
    <div class='flex flex-row'>
      <div>
        <button onclick='history.back()' class='text-blue-500'>Back</button>
        <Title>
          {name}
        </Title>  
      </div>
      
      <button id='btn-favorite' class='ml-4' data-name={name} data-id={id}>
        <Icon name="heart-outline" size={50} />
        <Icon class="hidden" name="heart-full" size={50} />
      </button>
    </div>
    
    <PokemonCard name={name} url={url} big={true} />

    <audio controls class='mt-5'>
      <source src={audioSrc} type="audio/ogg">
      Your browser does not support the <code>audio</code> element.
    </audio>
  </section>

</MainLayout>

<script>
  interface FavoritePokemon {
    name: string
    id: number
  }

  document.addEventListener("astro:page-load", () => {
    const btnFavorite = document.getElementById('btn-favorite') as HTMLButtonElement;

    if(!btnFavorite) return;
    
    const name = btnFavorite.dataset.name;
    const id = btnFavorite.dataset.id;
    
    btnFavorite.addEventListener('click', () => {
      console.log('Favorite', name, id)
    });
  });
  
</script>

<style>
  #btn-favorite {
    @apply hover:animate-pulse
  }
</style>